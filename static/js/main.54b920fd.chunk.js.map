{"version":3,"sources":["contexts/MarkersContext.js","contexts/MapContext.js","components/Map.js","components/Coordinates.js","components/Accordion.js","MainTemplate.js","serviceWorker.js","index.js"],"names":["MarkersContext","createContext","MarkersContextProvider","props","useState","markers","setMarkers","Provider","value","children","MapContext","MapContextProvider","width","height","latitude","longitude","zoom","viewport","setViewport","Map","useContext","useEffect","navigator","geolocation","getCurrentPosition","pos","crd","coords","renameKey","obj","old_key","new_key","Object","defineProperty","getOwnPropertyDescriptor","handleDragEnd","e","array","dragableElement","filter","marker","id","parseFloat","target","long","lngLat","lat","findIndex","className","mapboxApiAccessToken","process","onViewportChange","onClick","timeStamp","map","key","draggable","onDragEnd","indexOf","Coordinates","ListGroup","ListGroupItem","toFixed","type","document","getElementById","scrollIntoView","behavior","newArrayOfMarkers","handleRemove","Accordion","toogleArrow","length","querySelector","classList","toggle","Alert","href","preventDefault","UncontrolledCollapse","role","toggler","defaultOpen","Badge","color","MainTemplate","Boolean","window","location","hostname","match","ReactDOM","render","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.54b920fd.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nexport const MarkersContext = createContext();\r\nconst MarkersContextProvider = (props) => {\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  return (\r\n    <MarkersContext.Provider\r\n      value={{\r\n        markers,\r\n        setMarkers,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MarkersContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MarkersContextProvider;\r\n","import React, { createContext, useState } from \"react\";\r\nexport const MapContext = createContext();\r\nconst MapContextProvider = (props) => {\r\n  const [viewport, setViewport] = useState({\r\n    width: \"100%\",\r\n    height: \"50vh\",\r\n    latitude: 37.7577,\r\n    longitude: -122.4376,\r\n    zoom: 8,\r\n  });\r\n\r\n  return (\r\n    <MapContext.Provider\r\n      value={{\r\n        viewport,\r\n        setViewport,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MapContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MapContextProvider;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useContext } from \"react\";\r\nimport { MarkersContext } from \"../contexts/MarkersContext\";\r\nimport { MapContext } from \"../contexts/MapContext\";\r\nimport ReactMapGl, { Marker } from \"react-map-gl\";\r\n\r\nconst Map = () => {\r\n  const { markers, setMarkers } = useContext(MarkersContext);\r\n  const { viewport, setViewport } = useContext(MapContext);\r\n\r\n  useEffect(() => {\r\n    const success = (pos) => {\r\n      const crd = pos.coords;\r\n      setViewport({\r\n        width: \"100%\",\r\n        height: \"50vh\",\r\n        latitude: crd.latitude,\r\n        longitude: crd.longitude,\r\n        zoom: 10,\r\n      });\r\n    };\r\n    navigator.geolocation.getCurrentPosition(success);\r\n  }, []);\r\n\r\n  const renameKey = (obj, old_key, new_key) => {\r\n    if (old_key !== new_key) {\r\n      Object.defineProperty(\r\n        obj,\r\n        new_key,\r\n        Object.getOwnPropertyDescriptor(obj, old_key)\r\n      );\r\n      delete obj[old_key];\r\n    }\r\n  };\r\n\r\n  const handleDragEnd = (e) => {\r\n    const array = [...markers];\r\n\r\n    const dragableElement = array.filter(\r\n      (marker) => marker.id === parseFloat(e.target.id)\r\n    )[0];\r\n    dragableElement.long = e.lngLat[0];\r\n    dragableElement.lat = e.lngLat[1];\r\n\r\n    const id = array.findIndex(\r\n      (marker) => marker.id === parseFloat(e.target.id)\r\n    );\r\n\r\n    array[id] = dragableElement;\r\n\r\n    setMarkers(array);\r\n  };\r\n\r\n  return (\r\n    <ReactMapGl\r\n      className=\"map-container\"\r\n      {...viewport}\r\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n      onViewportChange={setViewport}\r\n      onClick={(e) => {\r\n        const obj = { ...e.lngLat, id: e.timeStamp };\r\n        renameKey(obj, \"0\", \"long\");\r\n        renameKey(obj, \"1\", \"lat\");\r\n        setMarkers([...markers, obj]);\r\n      }}\r\n    >\r\n      {markers.map((marker) => (\r\n        <Marker\r\n          className={`marker-${marker.id}`}\r\n          key={marker.id}\r\n          latitude={marker.lat}\r\n          longitude={marker.long}\r\n          draggable={true}\r\n          onDragEnd={handleDragEnd}\r\n        >\r\n          <div className=\"marker\">\r\n            <h6 className=\"h6\">{markers.indexOf(marker) + 1}</h6>\r\n            <i id={marker.id} className=\"now-ui-icons location_pin\"></i>\r\n          </div>\r\n        </Marker>\r\n      ))}\r\n    </ReactMapGl>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useContext } from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { MarkersContext } from \"../contexts/MarkersContext\";\r\nimport { MapContext } from \"../contexts/MapContext\";\r\n\r\nconst Coordinates = () => {\r\n  const { markers, setMarkers } = useContext(MarkersContext);\r\n  const { setViewport } = useContext(MapContext);\r\n\r\n  const handleRemove = (id) => {\r\n    const newArrayOfMarkers = markers.filter((marker) => marker.id !== id);\r\n    setMarkers(newArrayOfMarkers);\r\n  };\r\n  const handleNavigation = (lat, long) => {\r\n    document.getElementById(\"exampleAccordion1\").scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n    setViewport({\r\n      width: \"100%\",\r\n      height: \"50vh\",\r\n      latitude: parseFloat(lat),\r\n      longitude: parseFloat(long),\r\n      zoom: 15,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ListGroup>\r\n      {markers.map((marker) => (\r\n        <ListGroupItem key={marker.id} className=\"coordinates\" id={marker.id}>\r\n          <strong>{markers.indexOf(marker) + 1}.</strong> Lat:{\" \"}\r\n          {marker.lat.toFixed(4)} Long: {marker.long.toFixed(4)}\r\n          <button\r\n            className=\"btn btn-success btn-round btn-sm\"\r\n            type=\"button\"\r\n            onClick={() =>\r\n              handleNavigation(marker.lat.toFixed(4), marker.long.toFixed(4))\r\n            }\r\n          >\r\n            <i className=\"now-ui-icons business_globe\"></i> Show Me!\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary btn-icon btn-round btn-sm\"\r\n            type=\"button\"\r\n            onClick={() => handleRemove(marker.id)}\r\n          >\r\n            <i className=\"now-ui-icons ui-1_simple-remove danger\"></i>\r\n          </button>\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Coordinates;\r\n","import React, { useContext } from \"react\";\r\nimport { UncontrolledCollapse, Alert, Badge } from \"reactstrap\";\r\n\r\nimport Map from \"./Map\";\r\nimport Coordinates from \"./Coordinates\";\r\nimport { MarkersContext } from \"../contexts/MarkersContext\";\r\n\r\nconst Accordion = () => {\r\n  const { markers } = useContext(MarkersContext);\r\n  const toogleArrow = (e) => {\r\n    if (e.target.id === \"exampleAccordion2\" && markers.length === 0) {\r\n      return;\r\n    } else {\r\n      e.target.querySelector(\".animation-arrow\").classList.toggle(\"active\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"item\">\r\n        <Alert\r\n          href=\"#pablo\"\r\n          className=\"custom-alert\"\r\n          id=\"exampleAccordion1\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            toogleArrow(e);\r\n          }}\r\n        >\r\n          <h3 className=\"h3 pointer-events-none\">\r\n            Map{\" \"}\r\n            <strong>\r\n              <i className=\"now-ui-icons arrows-1_minimal-up animation-arrow\"></i>\r\n            </strong>\r\n          </h3>\r\n        </Alert>\r\n        <UncontrolledCollapse\r\n          role=\"tabpanel\"\r\n          toggler=\"#exampleAccordion1\"\r\n          defaultOpen\r\n        >\r\n          <Map />\r\n        </UncontrolledCollapse>\r\n      </div>\r\n      <div className=\"item\">\r\n        <Alert\r\n          href=\"#pablo\"\r\n          className=\"custom-alert\"\r\n          id=\"exampleAccordion2\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            toogleArrow(e);\r\n          }}\r\n        >\r\n          <h3 className=\"h3 pointer-events-none\">\r\n            Coordinates <Badge color=\"default\">{markers.length}</Badge>\r\n            <strong>\r\n              <i className=\"now-ui-icons arrows-1_minimal-down animation-arrow\"></i>\r\n            </strong>\r\n          </h3>\r\n        </Alert>\r\n        <UncontrolledCollapse role=\"tabpanel\" toggler=\"#exampleAccordion2\">\r\n          <Coordinates />\r\n        </UncontrolledCollapse>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\nimport Accordion from \"./components/Accordion\";\nimport MarkersContextProvider from \"./contexts/MarkersContext\";\nimport MapContextProvider from \"./contexts/MapContext\";\n\nconst MainTemplate = () => {\n  return (\n    <MapContextProvider>\n      <MarkersContextProvider>\n        <h1 className=\"h1 text-align-center\"> Mapbox-task</h1>\n        <Accordion />\n      </MarkersContextProvider>\n    </MapContextProvider>\n  );\n};\n\nexport default MainTemplate;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/css/bootstrap.min.css\";\nimport \"./assets/css/now-ui-kit.min.css\";\nimport \"./assets/demo/demo.css\";\nimport \"./index.css\";\nimport MainTemplate from \"./MainTemplate\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <>\n    <MainTemplate />\n  </>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}